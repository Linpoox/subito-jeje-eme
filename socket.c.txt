/*
 * shm.c
 *
 * Maniet Arthur
 * Renard JÃ©rome
 */

#include "socket.h"

/* Initialise le socket du serveur */
int server_socket_init(int port) {
	struct sockaddr_in serv_addr;
	int server_fd;
	
	server_fd = socket(AF_INET, SOCK_STREAM, 0);
	if (server_fd < 0)
		error("Erreur Ã  l'ouverture du socket");
	bzero((char *) &serv_addr, sizeof(serv_addr));
	serv_addr.sin_family = AF_INET;
	serv_addr.sin_addr.s_addr = INADDR_ANY;
	serv_addr.sin_port = htons(port);
	if (bind(server_fd, (struct sockaddr *) &serv_addr, sizeof(serv_addr)) < 0)
		error("Erreur Ã  la liaison du socket");
	
	return server_fd;
}

/* Accepte un client et renvoie le FD de son socket */
int accept_client(int server_fd) {
	static int socket_fd;
	static socklen_t socket_len;
	static struct sockaddr_in socket_addr;
	
	socket_len = sizeof(socket_addr);
	socket_fd = accept(server_fd, (struct sockaddr *) &socket_addr, &socket_len);
	if (socket_fd < 0)
		error("Erreur Ã  l'acceptation d'un client");
	
	return socket_fd;
}

/* CrÃ©ation du socket et connexion au serveur */
int connexion_serveur(int port) {
	int socket_server;
	struct sockaddr_in serv_addr;
	struct hostent *server;
	
	socket_server = socket(AF_INET, SOCK_STREAM, 0);
	if (socket_server < 0)
		error("Erreur Ã  l'ouverture du socket");
	server = gethostbyname("localhost");
	if (server == NULL) {
		fprintf(stderr, "Erreur de connexion au serveur (l'hÃ´te n'existe pas)\n");
		exit(0);
	}
	bzero((char *) &serv_addr, sizeof(serv_addr));
	serv_addr.sin_family = AF_INET;
	bcopy((char *)server->h_addr_list[0],
		  (char *)&serv_addr.sin_addr.s_addr,
		  server->h_length);
	serv_addr.sin_port = htons(port);
	if (connect(socket_server, (struct sockaddr *) &serv_addr, sizeof(serv_addr)) < 0)
		error("Erreur de connexion au serveur (le serveur n'est probablement pas disponible)");
	
	return socket_server;
}